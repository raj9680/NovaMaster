// <auto-generated />
using System;
using Imm.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imm.DAL.Migrations
{
    [DbContext(typeof(NovaDbContext))]
    [Migration("20221105073432_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetRoles", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Role = "agent"
                        });
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetStudentsInfo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BachelorsEducationCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BachelorsEducationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BachelorsEducationEnglishMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BachelorsEducationMathsmarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BachelorsEducationPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BachelorsEducationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BachelorsInstituteInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishExamType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExplainIfRefused")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveStudyPermitVisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighestEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntakeYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsRefusedVisa")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JobEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("JobStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MastersEducationCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MastersEducationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MastersEducationEnglishMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MastersEducationMathsmarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MastersEducationPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MastersEducationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MastersInstituteInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatricEducationCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MatricEducationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatricEducationEnglishMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatricEducationMathsmarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatricEducationPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatricEducationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatricInstituteInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramCollegePreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SecondaryEducationCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SecondaryEducationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryEducationEnglishMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryEducationMathsmarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryEducationPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SecondaryEducationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryInstituteInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.ToTable("AspNetStudentsInfo");
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsers", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CnfEmail")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewRegistration")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CnfEmail = false,
                            Email = "admin@admin.com",
                            FullName = "Raj Aryan",
                            IsActive = false,
                            IsNewRegistration = false,
                            Password = "admin@admin.com"
                        });
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersDocs", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserDocs");
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersInfo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.ToTable("AspNetUsersInfo");
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersManager", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOJ")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("AspNetUsersManager");
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = 3,
                            CityName = "Amritsar",
                            StateId = 1
                        });
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "United States"
                        });
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            CountryId = 1,
                            StateName = "Punjab"
                        },
                        new
                        {
                            StateId = 2,
                            CountryId = 1,
                            StateName = "Uttar Pradesh"
                        },
                        new
                        {
                            StateId = 3,
                            CountryId = 2,
                            StateName = "NY"
                        });
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetRoles", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.AspNetUsers", "AspNetUsers")
                        .WithOne("AspNetRoles")
                        .HasForeignKey("Imm.DAL.Data.Table.AspNetRoles", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetStudentsInfo", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imm.DAL.Data.Table.AspNetUsers", "AspNetUsers")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersDocs", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.AspNetUsers", "AspNetUsers")
                        .WithMany("AspNetUsersDocs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersInfo", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.City", "City")
                        .WithMany("AspNetUsersInfo")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imm.DAL.Data.Table.AspNetUsers", "AspNetUsers")
                        .WithOne("AspNetUsersInfo")
                        .HasForeignKey("Imm.DAL.Data.Table.AspNetUsersInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.AspNetUsersManager", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.AspNetUsers", "AspNetUsers")
                        .WithOne("AspNetUsersManager")
                        .HasForeignKey("Imm.DAL.Data.Table.AspNetUsersManager", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.City", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imm.DAL.Data.Table.State", b =>
                {
                    b.HasOne("Imm.DAL.Data.Table.Country", "Country")
                        .WithMany("State")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
